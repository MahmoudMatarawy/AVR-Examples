
TIMER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000084e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000008c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  000008c2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008c2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000930  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000075f  00000000  00000000  00000970  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000663  00000000  00000000  000010cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000093c  00000000  00000000  00001732  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000048  00000000  00000000  00002070  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000344  00000000  00000000  000020b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ce  00000000  00000000  000023fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  000024ca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 36       	cpi	r26, 0x62	; 98
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 25 04 	jmp	0x84a	; 0x84a <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:
#include "TIMER.h"


int main(void)
{
	DDRC = 0xff;
  7c:	8f ef       	ldi	r24, 0xFF	; 255
  7e:	84 bb       	out	0x14, r24	; 20
	timer_init(0,FAST_PWM_MODE,CLEAR_OC_MODE,8);
  80:	28 e0       	ldi	r18, 0x08	; 8
  82:	30 e0       	ldi	r19, 0x00	; 0
  84:	43 e4       	ldi	r20, 0x43	; 67
  86:	66 e4       	ldi	r22, 0x46	; 70
  88:	80 e0       	ldi	r24, 0x00	; 0
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	0e 94 60 00 	call	0xc0	; 0xc0 <timer_init>
	//TCNT0 =0;
    while (1) 
    {
		for(int i = 0 ; i<255 ; i++)
  90:	80 e0       	ldi	r24, 0x00	; 0
  92:	90 e0       	ldi	r25, 0x00	; 0
  94:	08 c0       	rjmp	.+16     	; 0xa6 <main+0x2a>
		{
			TIMER_0_OUTPUT_COMPARE_REG = i ;
  96:	8c bf       	out	0x3c, r24	; 60
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  98:	ef e3       	ldi	r30, 0x3F	; 63
  9a:	fc e9       	ldi	r31, 0x9C	; 156
  9c:	31 97       	sbiw	r30, 0x01	; 1
  9e:	f1 f7       	brne	.-4      	; 0x9c <main+0x20>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <main+0x26>
  a2:	00 00       	nop
	DDRC = 0xff;
	timer_init(0,FAST_PWM_MODE,CLEAR_OC_MODE,8);
	//TCNT0 =0;
    while (1) 
    {
		for(int i = 0 ; i<255 ; i++)
  a4:	01 96       	adiw	r24, 0x01	; 1
  a6:	8f 3f       	cpi	r24, 0xFF	; 255
  a8:	91 05       	cpc	r25, r1
  aa:	ac f3       	brlt	.-22     	; 0x96 <main+0x1a>
  ac:	ff ef       	ldi	r31, 0xFF	; 255
  ae:	23 e2       	ldi	r18, 0x23	; 35
  b0:	84 ef       	ldi	r24, 0xF4	; 244
  b2:	f1 50       	subi	r31, 0x01	; 1
  b4:	20 40       	sbci	r18, 0x00	; 0
  b6:	80 40       	sbci	r24, 0x00	; 0
  b8:	e1 f7       	brne	.-8      	; 0xb2 <main+0x36>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <main+0x40>
  bc:	00 00       	nop
  be:	e8 cf       	rjmp	.-48     	; 0x90 <main+0x14>

000000c0 <timer_init>:
// TIMER 0 STATUS
int TIMER_0_STATUS = NOT_INIT ;

unsigned int timer_init(int tn , char mode , char com , int clock_select)
{
	if (TIMER_0_STATUS == NOT_INIT)
  c0:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  c4:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  c8:	ef 2b       	or	r30, r31
  ca:	09 f0       	breq	.+2      	; 0xce <timer_init+0xe>
  cc:	af c3       	rjmp	.+1886   	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
	{
		switch(tn)
  ce:	89 2b       	or	r24, r25
  d0:	09 f0       	breq	.+2      	; 0xd4 <timer_init+0x14>
  d2:	af c3       	rjmp	.+1886   	; 0x832 <__DATA_REGION_LENGTH__+0x32>
		{
			// Timer 0 INIT.
			case TIMER_0 :
			TIMER_0_DDR |= ENABLE(TIMER_0_PIN);
  d4:	87 b3       	in	r24, 0x17	; 23
  d6:	88 60       	ori	r24, 0x08	; 8
  d8:	87 bb       	out	0x17, r24	; 23
			switch(mode)
  da:	66 34       	cpi	r22, 0x46	; 70
  dc:	09 f4       	brne	.+2      	; 0xe0 <timer_init+0x20>
  de:	d8 c1       	rjmp	.+944    	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
  e0:	60 35       	cpi	r22, 0x50	; 80
  e2:	21 f0       	breq	.+8      	; 0xec <timer_init+0x2c>
  e4:	63 34       	cpi	r22, 0x43	; 67
  e6:	09 f0       	breq	.+2      	; 0xea <timer_init+0x2a>
  e8:	9c c2       	rjmp	.+1336   	; 0x622 <__EEPROM_REGION_LENGTH__+0x222>
  ea:	c9 c0       	rjmp	.+402    	; 0x27e <timer_init+0x1be>
			{
				case PWM_PHASE_CORRECT_MODE :
				switch(com)
  ec:	43 35       	cpi	r20, 0x53	; 83
  ee:	09 f4       	brne	.+2      	; 0xf2 <timer_init+0x32>
  f0:	46 c0       	rjmp	.+140    	; 0x17e <timer_init+0xbe>
  f2:	44 35       	cpi	r20, 0x54	; 84
  f4:	09 f4       	brne	.+2      	; 0xf8 <timer_init+0x38>
  f6:	a0 c3       	rjmp	.+1856   	; 0x838 <__DATA_REGION_LENGTH__+0x38>
  f8:	43 34       	cpi	r20, 0x43	; 67
  fa:	09 f0       	breq	.+2      	; 0xfe <timer_init+0x3e>
  fc:	80 c0       	rjmp	.+256    	; 0x1fe <timer_init+0x13e>
					case TOGGLE_OC_MODE :
					return FAILED ;
					break;
					
					case CLEAR_OC_MODE :
					switch(clock_select)
  fe:	28 30       	cpi	r18, 0x08	; 8
 100:	31 05       	cpc	r19, r1
 102:	d9 f0       	breq	.+54     	; 0x13a <timer_init+0x7a>
 104:	54 f4       	brge	.+20     	; 0x11a <timer_init+0x5a>
 106:	22 30       	cpi	r18, 0x02	; 2
 108:	31 05       	cpc	r19, r1
 10a:	39 f1       	breq	.+78     	; 0x15a <timer_init+0x9a>
 10c:	23 30       	cpi	r18, 0x03	; 3
 10e:	31 05       	cpc	r19, r1
 110:	41 f1       	breq	.+80     	; 0x162 <timer_init+0xa2>
 112:	21 30       	cpi	r18, 0x01	; 1
 114:	31 05       	cpc	r19, r1
 116:	49 f5       	brne	.+82     	; 0x16a <timer_init+0xaa>
 118:	0c c0       	rjmp	.+24     	; 0x132 <timer_init+0x72>
 11a:	29 30       	cpi	r18, 0x09	; 9
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	38 07       	cpc	r19, r24
 120:	a1 f0       	breq	.+40     	; 0x14a <timer_init+0x8a>
 122:	21 15       	cp	r18, r1
 124:	84 e0       	ldi	r24, 0x04	; 4
 126:	38 07       	cpc	r19, r24
 128:	a1 f0       	breq	.+40     	; 0x152 <timer_init+0x92>
 12a:	20 34       	cpi	r18, 0x40	; 64
 12c:	31 05       	cpc	r19, r1
 12e:	e9 f4       	brne	.+58     	; 0x16a <timer_init+0xaa>
 130:	08 c0       	rjmp	.+16     	; 0x142 <timer_init+0x82>
					{
						case NO_PRESCALING_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<COM01)|(1<<CS00);
 132:	83 b7       	in	r24, 0x33	; 51
 134:	81 66       	ori	r24, 0x61	; 97
 136:	83 bf       	out	0x33, r24	; 51
						break;
 138:	1b c0       	rjmp	.+54     	; 0x170 <timer_init+0xb0>
						
						case CLK_8_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<COM01)|(1<<CS01);
 13a:	83 b7       	in	r24, 0x33	; 51
 13c:	82 66       	ori	r24, 0x62	; 98
 13e:	83 bf       	out	0x33, r24	; 51
						break;
 140:	17 c0       	rjmp	.+46     	; 0x170 <timer_init+0xb0>
						
						case CLK_64_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<COM01)|(1<<CS00)|(1<<CS01);
 142:	83 b7       	in	r24, 0x33	; 51
 144:	83 66       	ori	r24, 0x63	; 99
 146:	83 bf       	out	0x33, r24	; 51
						break;
 148:	13 c0       	rjmp	.+38     	; 0x170 <timer_init+0xb0>
						
						case CLK_265_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<COM01)|(1<<CS02);
 14a:	83 b7       	in	r24, 0x33	; 51
 14c:	84 66       	ori	r24, 0x64	; 100
 14e:	83 bf       	out	0x33, r24	; 51
						break;
 150:	0f c0       	rjmp	.+30     	; 0x170 <timer_init+0xb0>
						
						case CLK_1024_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<COM01)|(1<<CS00)|(1<<CS02);
 152:	83 b7       	in	r24, 0x33	; 51
 154:	85 66       	ori	r24, 0x65	; 101
 156:	83 bf       	out	0x33, r24	; 51
						break;
 158:	0b c0       	rjmp	.+22     	; 0x170 <timer_init+0xb0>
						
						case FALLING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<COM01)|(1<<CS01)|(1<<CS02);
 15a:	83 b7       	in	r24, 0x33	; 51
 15c:	86 66       	ori	r24, 0x66	; 102
 15e:	83 bf       	out	0x33, r24	; 51
						break;
 160:	07 c0       	rjmp	.+14     	; 0x170 <timer_init+0xb0>
						
						case RISING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<COM01)|(1<<CS00)|(1<<CS01)|(1<<CS02);
 162:	83 b7       	in	r24, 0x33	; 51
 164:	87 66       	ori	r24, 0x67	; 103
 166:	83 bf       	out	0x33, r24	; 51
						break;
 168:	03 c0       	rjmp	.+6      	; 0x170 <timer_init+0xb0>
						
						default:
						TIMER_0_CONTROL_REG |= (1<<WGM00)|(1<<COM01);  break;
 16a:	83 b7       	in	r24, 0x33	; 51
 16c:	80 66       	ori	r24, 0x60	; 96
 16e:	83 bf       	out	0x33, r24	; 51
					}
					TIMER_0_STATUS = INIT;
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 178:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					return DONE ;
 17c:	08 95       	ret
					break;
					
					case  SET_OC_MODE :
					switch(clock_select)
 17e:	28 30       	cpi	r18, 0x08	; 8
 180:	31 05       	cpc	r19, r1
 182:	d9 f0       	breq	.+54     	; 0x1ba <timer_init+0xfa>
 184:	54 f4       	brge	.+20     	; 0x19a <timer_init+0xda>
 186:	22 30       	cpi	r18, 0x02	; 2
 188:	31 05       	cpc	r19, r1
 18a:	39 f1       	breq	.+78     	; 0x1da <timer_init+0x11a>
 18c:	23 30       	cpi	r18, 0x03	; 3
 18e:	31 05       	cpc	r19, r1
 190:	41 f1       	breq	.+80     	; 0x1e2 <timer_init+0x122>
 192:	21 30       	cpi	r18, 0x01	; 1
 194:	31 05       	cpc	r19, r1
 196:	49 f5       	brne	.+82     	; 0x1ea <timer_init+0x12a>
 198:	0c c0       	rjmp	.+24     	; 0x1b2 <timer_init+0xf2>
 19a:	29 30       	cpi	r18, 0x09	; 9
 19c:	81 e0       	ldi	r24, 0x01	; 1
 19e:	38 07       	cpc	r19, r24
 1a0:	a1 f0       	breq	.+40     	; 0x1ca <timer_init+0x10a>
 1a2:	21 15       	cp	r18, r1
 1a4:	84 e0       	ldi	r24, 0x04	; 4
 1a6:	38 07       	cpc	r19, r24
 1a8:	a1 f0       	breq	.+40     	; 0x1d2 <timer_init+0x112>
 1aa:	20 34       	cpi	r18, 0x40	; 64
 1ac:	31 05       	cpc	r19, r1
 1ae:	e9 f4       	brne	.+58     	; 0x1ea <timer_init+0x12a>
 1b0:	08 c0       	rjmp	.+16     	; 0x1c2 <timer_init+0x102>
					{
						case NO_PRESCALING_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<COM00)|(1<<COM01)|(1<<CS00);
 1b2:	83 b7       	in	r24, 0x33	; 51
 1b4:	81 67       	ori	r24, 0x71	; 113
 1b6:	83 bf       	out	0x33, r24	; 51
						break;
 1b8:	1b c0       	rjmp	.+54     	; 0x1f0 <timer_init+0x130>
						
						case CLK_8_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<COM00)|(1<<COM01)|(1<<CS01);
 1ba:	83 b7       	in	r24, 0x33	; 51
 1bc:	82 67       	ori	r24, 0x72	; 114
 1be:	83 bf       	out	0x33, r24	; 51
						break;
 1c0:	17 c0       	rjmp	.+46     	; 0x1f0 <timer_init+0x130>
						
						case CLK_64_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<COM00)|(1<<COM01)|(1<<CS00)|(1<<CS01);
 1c2:	83 b7       	in	r24, 0x33	; 51
 1c4:	83 67       	ori	r24, 0x73	; 115
 1c6:	83 bf       	out	0x33, r24	; 51
						break;
 1c8:	13 c0       	rjmp	.+38     	; 0x1f0 <timer_init+0x130>
						
						case CLK_265_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<COM00)|(1<<COM01)|(1<<CS02);
 1ca:	83 b7       	in	r24, 0x33	; 51
 1cc:	84 67       	ori	r24, 0x74	; 116
 1ce:	83 bf       	out	0x33, r24	; 51
						break;
 1d0:	0f c0       	rjmp	.+30     	; 0x1f0 <timer_init+0x130>
						
						case CLK_1024_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<COM00)|(1<<COM01)|(1<<CS00)|(1<<CS02);
 1d2:	83 b7       	in	r24, 0x33	; 51
 1d4:	85 67       	ori	r24, 0x75	; 117
 1d6:	83 bf       	out	0x33, r24	; 51
						break;
 1d8:	0b c0       	rjmp	.+22     	; 0x1f0 <timer_init+0x130>
						
						case FALLING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<COM00)|(1<<COM01)|(1<<CS01)|(1<<CS02);
 1da:	83 b7       	in	r24, 0x33	; 51
 1dc:	86 67       	ori	r24, 0x76	; 118
 1de:	83 bf       	out	0x33, r24	; 51
						break;
 1e0:	07 c0       	rjmp	.+14     	; 0x1f0 <timer_init+0x130>
						
						case RISING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<COM00)|(1<<COM01)|(1<<CS00)|(1<<CS01)|(1<<CS02);
 1e2:	83 b7       	in	r24, 0x33	; 51
 1e4:	87 67       	ori	r24, 0x77	; 119
 1e6:	83 bf       	out	0x33, r24	; 51
						break;
 1e8:	03 c0       	rjmp	.+6      	; 0x1f0 <timer_init+0x130>
						
						default:
						TIMER_0_CONTROL_REG |= (1<<WGM00)|(1<<COM00)|(1<<COM01); break;
 1ea:	83 b7       	in	r24, 0x33	; 51
 1ec:	80 67       	ori	r24, 0x70	; 112
 1ee:	83 bf       	out	0x33, r24	; 51
					}
					TIMER_0_STATUS = INIT;
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 1f8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					return DONE ;
 1fc:	08 95       	ret
					break;
					
					default:
					switch(clock_select)
 1fe:	28 30       	cpi	r18, 0x08	; 8
 200:	31 05       	cpc	r19, r1
 202:	d9 f0       	breq	.+54     	; 0x23a <timer_init+0x17a>
 204:	54 f4       	brge	.+20     	; 0x21a <timer_init+0x15a>
 206:	22 30       	cpi	r18, 0x02	; 2
 208:	31 05       	cpc	r19, r1
 20a:	39 f1       	breq	.+78     	; 0x25a <timer_init+0x19a>
 20c:	23 30       	cpi	r18, 0x03	; 3
 20e:	31 05       	cpc	r19, r1
 210:	41 f1       	breq	.+80     	; 0x262 <timer_init+0x1a2>
 212:	21 30       	cpi	r18, 0x01	; 1
 214:	31 05       	cpc	r19, r1
 216:	49 f5       	brne	.+82     	; 0x26a <timer_init+0x1aa>
 218:	0c c0       	rjmp	.+24     	; 0x232 <timer_init+0x172>
 21a:	29 30       	cpi	r18, 0x09	; 9
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	38 07       	cpc	r19, r24
 220:	a1 f0       	breq	.+40     	; 0x24a <timer_init+0x18a>
 222:	21 15       	cp	r18, r1
 224:	84 e0       	ldi	r24, 0x04	; 4
 226:	38 07       	cpc	r19, r24
 228:	a1 f0       	breq	.+40     	; 0x252 <timer_init+0x192>
 22a:	20 34       	cpi	r18, 0x40	; 64
 22c:	31 05       	cpc	r19, r1
 22e:	e9 f4       	brne	.+58     	; 0x26a <timer_init+0x1aa>
 230:	08 c0       	rjmp	.+16     	; 0x242 <timer_init+0x182>
					{
						case NO_PRESCALING_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<CS00);
 232:	83 b7       	in	r24, 0x33	; 51
 234:	81 64       	ori	r24, 0x41	; 65
 236:	83 bf       	out	0x33, r24	; 51
						break;
 238:	1b c0       	rjmp	.+54     	; 0x270 <timer_init+0x1b0>
						
						case CLK_8_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<CS01);
 23a:	83 b7       	in	r24, 0x33	; 51
 23c:	82 64       	ori	r24, 0x42	; 66
 23e:	83 bf       	out	0x33, r24	; 51
						break;
 240:	17 c0       	rjmp	.+46     	; 0x270 <timer_init+0x1b0>
						
						case CLK_64_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<CS00)|(1<<CS01);
 242:	83 b7       	in	r24, 0x33	; 51
 244:	83 64       	ori	r24, 0x43	; 67
 246:	83 bf       	out	0x33, r24	; 51
						break;
 248:	13 c0       	rjmp	.+38     	; 0x270 <timer_init+0x1b0>
						
						case CLK_265_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<CS02);
 24a:	83 b7       	in	r24, 0x33	; 51
 24c:	84 64       	ori	r24, 0x44	; 68
 24e:	83 bf       	out	0x33, r24	; 51
						break;
 250:	0f c0       	rjmp	.+30     	; 0x270 <timer_init+0x1b0>
						
						case CLK_1024_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<CS00)|(1<<CS02);
 252:	83 b7       	in	r24, 0x33	; 51
 254:	85 64       	ori	r24, 0x45	; 69
 256:	83 bf       	out	0x33, r24	; 51
						break;
 258:	0b c0       	rjmp	.+22     	; 0x270 <timer_init+0x1b0>
						
						case FALLING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<CS01)|(1<<CS02);
 25a:	83 b7       	in	r24, 0x33	; 51
 25c:	86 64       	ori	r24, 0x46	; 70
 25e:	83 bf       	out	0x33, r24	; 51
						break;
 260:	07 c0       	rjmp	.+14     	; 0x270 <timer_init+0x1b0>
						
						case RISING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00)|(1<<CS00)|(1<<CS01)|(1<<CS02);
 262:	83 b7       	in	r24, 0x33	; 51
 264:	87 64       	ori	r24, 0x47	; 71
 266:	83 bf       	out	0x33, r24	; 51
						break;
 268:	03 c0       	rjmp	.+6      	; 0x270 <timer_init+0x1b0>
						
						default:
						TIMER_0_CONTROL_REG |= (1<<WGM00);
 26a:	83 b7       	in	r24, 0x33	; 51
 26c:	80 64       	ori	r24, 0x40	; 64
 26e:	83 bf       	out	0x33, r24	; 51
						break;
					}
					TIMER_0_STATUS = INIT;
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 278:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					return DONE ;
 27c:	08 95       	ret
					break;
				}
				break;
				
				case CTC_MODE :
				switch(com)
 27e:	43 35       	cpi	r20, 0x53	; 83
 280:	09 f4       	brne	.+2      	; 0x284 <timer_init+0x1c4>
 282:	86 c0       	rjmp	.+268    	; 0x390 <timer_init+0x2d0>
 284:	44 35       	cpi	r20, 0x54	; 84
 286:	21 f0       	breq	.+8      	; 0x290 <timer_init+0x1d0>
 288:	43 34       	cpi	r20, 0x43	; 67
 28a:	09 f0       	breq	.+2      	; 0x28e <timer_init+0x1ce>
 28c:	c1 c0       	rjmp	.+386    	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 28e:	40 c0       	rjmp	.+128    	; 0x310 <timer_init+0x250>
				{
					case TOGGLE_OC_MODE :
					switch(clock_select)
 290:	28 30       	cpi	r18, 0x08	; 8
 292:	31 05       	cpc	r19, r1
 294:	d9 f0       	breq	.+54     	; 0x2cc <timer_init+0x20c>
 296:	54 f4       	brge	.+20     	; 0x2ac <timer_init+0x1ec>
 298:	22 30       	cpi	r18, 0x02	; 2
 29a:	31 05       	cpc	r19, r1
 29c:	39 f1       	breq	.+78     	; 0x2ec <timer_init+0x22c>
 29e:	23 30       	cpi	r18, 0x03	; 3
 2a0:	31 05       	cpc	r19, r1
 2a2:	41 f1       	breq	.+80     	; 0x2f4 <timer_init+0x234>
 2a4:	21 30       	cpi	r18, 0x01	; 1
 2a6:	31 05       	cpc	r19, r1
 2a8:	49 f5       	brne	.+82     	; 0x2fc <timer_init+0x23c>
 2aa:	0c c0       	rjmp	.+24     	; 0x2c4 <timer_init+0x204>
 2ac:	29 30       	cpi	r18, 0x09	; 9
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	38 07       	cpc	r19, r24
 2b2:	a1 f0       	breq	.+40     	; 0x2dc <timer_init+0x21c>
 2b4:	21 15       	cp	r18, r1
 2b6:	84 e0       	ldi	r24, 0x04	; 4
 2b8:	38 07       	cpc	r19, r24
 2ba:	a1 f0       	breq	.+40     	; 0x2e4 <timer_init+0x224>
 2bc:	20 34       	cpi	r18, 0x40	; 64
 2be:	31 05       	cpc	r19, r1
 2c0:	e9 f4       	brne	.+58     	; 0x2fc <timer_init+0x23c>
 2c2:	08 c0       	rjmp	.+16     	; 0x2d4 <timer_init+0x214>
					{
						case NO_PRESCALING_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM00)|(1<<CS00);
 2c4:	83 b7       	in	r24, 0x33	; 51
 2c6:	89 61       	ori	r24, 0x19	; 25
 2c8:	83 bf       	out	0x33, r24	; 51
						break;
 2ca:	1b c0       	rjmp	.+54     	; 0x302 <timer_init+0x242>
						
						case CLK_8_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM00)|(1<<CS01);
 2cc:	83 b7       	in	r24, 0x33	; 51
 2ce:	8a 61       	ori	r24, 0x1A	; 26
 2d0:	83 bf       	out	0x33, r24	; 51
						break;
 2d2:	17 c0       	rjmp	.+46     	; 0x302 <timer_init+0x242>
						
						case CLK_64_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM00)|(1<<CS00)|(1<<CS01);
 2d4:	83 b7       	in	r24, 0x33	; 51
 2d6:	8b 61       	ori	r24, 0x1B	; 27
 2d8:	83 bf       	out	0x33, r24	; 51
						break;
 2da:	13 c0       	rjmp	.+38     	; 0x302 <timer_init+0x242>
						
						case CLK_265_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM00)|(1<<CS02);
 2dc:	83 b7       	in	r24, 0x33	; 51
 2de:	8c 61       	ori	r24, 0x1C	; 28
 2e0:	83 bf       	out	0x33, r24	; 51
						break;
 2e2:	0f c0       	rjmp	.+30     	; 0x302 <timer_init+0x242>
						
						case CLK_1024_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM00)|(1<<CS00)|(1<<CS02);
 2e4:	83 b7       	in	r24, 0x33	; 51
 2e6:	8d 61       	ori	r24, 0x1D	; 29
 2e8:	83 bf       	out	0x33, r24	; 51
						break;
 2ea:	0b c0       	rjmp	.+22     	; 0x302 <timer_init+0x242>
						
						case FALLING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM00)|(1<<CS01)|(1<<CS02);
 2ec:	83 b7       	in	r24, 0x33	; 51
 2ee:	8e 61       	ori	r24, 0x1E	; 30
 2f0:	83 bf       	out	0x33, r24	; 51
						break;
 2f2:	07 c0       	rjmp	.+14     	; 0x302 <timer_init+0x242>
						
						case RISING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM00)|(1<<CS00)|(1<<CS01)|(1<<CS02);
 2f4:	83 b7       	in	r24, 0x33	; 51
 2f6:	8f 61       	ori	r24, 0x1F	; 31
 2f8:	83 bf       	out	0x33, r24	; 51
						break;
 2fa:	03 c0       	rjmp	.+6      	; 0x302 <timer_init+0x242>
						
						default:
						TIMER_0_CONTROL_REG |= (1<<WGM01)|(1<<COM00); break;
 2fc:	83 b7       	in	r24, 0x33	; 51
 2fe:	88 61       	ori	r24, 0x18	; 24
 300:	83 bf       	out	0x33, r24	; 51
					}
					TIMER_0_STATUS = INIT;
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 30a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					return DONE ;
 30e:	08 95       	ret
					break;
					
					case CLEAR_OC_MODE :
					switch(clock_select)
 310:	28 30       	cpi	r18, 0x08	; 8
 312:	31 05       	cpc	r19, r1
 314:	d9 f0       	breq	.+54     	; 0x34c <timer_init+0x28c>
 316:	54 f4       	brge	.+20     	; 0x32c <timer_init+0x26c>
 318:	22 30       	cpi	r18, 0x02	; 2
 31a:	31 05       	cpc	r19, r1
 31c:	39 f1       	breq	.+78     	; 0x36c <timer_init+0x2ac>
 31e:	23 30       	cpi	r18, 0x03	; 3
 320:	31 05       	cpc	r19, r1
 322:	41 f1       	breq	.+80     	; 0x374 <timer_init+0x2b4>
 324:	21 30       	cpi	r18, 0x01	; 1
 326:	31 05       	cpc	r19, r1
 328:	49 f5       	brne	.+82     	; 0x37c <timer_init+0x2bc>
 32a:	0c c0       	rjmp	.+24     	; 0x344 <timer_init+0x284>
 32c:	29 30       	cpi	r18, 0x09	; 9
 32e:	81 e0       	ldi	r24, 0x01	; 1
 330:	38 07       	cpc	r19, r24
 332:	a1 f0       	breq	.+40     	; 0x35c <timer_init+0x29c>
 334:	21 15       	cp	r18, r1
 336:	84 e0       	ldi	r24, 0x04	; 4
 338:	38 07       	cpc	r19, r24
 33a:	a1 f0       	breq	.+40     	; 0x364 <timer_init+0x2a4>
 33c:	20 34       	cpi	r18, 0x40	; 64
 33e:	31 05       	cpc	r19, r1
 340:	e9 f4       	brne	.+58     	; 0x37c <timer_init+0x2bc>
 342:	08 c0       	rjmp	.+16     	; 0x354 <timer_init+0x294>
					{
						case NO_PRESCALING_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM01)|(1<<CS00);
 344:	83 b7       	in	r24, 0x33	; 51
 346:	89 62       	ori	r24, 0x29	; 41
 348:	83 bf       	out	0x33, r24	; 51
						break;
 34a:	1b c0       	rjmp	.+54     	; 0x382 <timer_init+0x2c2>
						
						case CLK_8_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM01)|(1<<CS01);
 34c:	83 b7       	in	r24, 0x33	; 51
 34e:	8a 62       	ori	r24, 0x2A	; 42
 350:	83 bf       	out	0x33, r24	; 51
						break;
 352:	17 c0       	rjmp	.+46     	; 0x382 <timer_init+0x2c2>
						
						case CLK_64_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM01)|(1<<CS00)|(1<<CS01);
 354:	83 b7       	in	r24, 0x33	; 51
 356:	8b 62       	ori	r24, 0x2B	; 43
 358:	83 bf       	out	0x33, r24	; 51
						break;
 35a:	13 c0       	rjmp	.+38     	; 0x382 <timer_init+0x2c2>
						
						case CLK_265_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM01)|(1<<CS02);
 35c:	83 b7       	in	r24, 0x33	; 51
 35e:	8c 62       	ori	r24, 0x2C	; 44
 360:	83 bf       	out	0x33, r24	; 51
						break;
 362:	0f c0       	rjmp	.+30     	; 0x382 <timer_init+0x2c2>
						
						case CLK_1024_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM01)|(1<<CS00)|(1<<CS02);
 364:	83 b7       	in	r24, 0x33	; 51
 366:	8d 62       	ori	r24, 0x2D	; 45
 368:	83 bf       	out	0x33, r24	; 51
						break;
 36a:	0b c0       	rjmp	.+22     	; 0x382 <timer_init+0x2c2>
						
						case FALLING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM01)|(1<<CS01)|(1<<CS02);
 36c:	83 b7       	in	r24, 0x33	; 51
 36e:	8e 62       	ori	r24, 0x2E	; 46
 370:	83 bf       	out	0x33, r24	; 51
						break;
 372:	07 c0       	rjmp	.+14     	; 0x382 <timer_init+0x2c2>
						
						case RISING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM01)|(1<<CS00)|(1<<CS01)|(1<<CS02);
 374:	83 b7       	in	r24, 0x33	; 51
 376:	8f 62       	ori	r24, 0x2F	; 47
 378:	83 bf       	out	0x33, r24	; 51
						break;
 37a:	03 c0       	rjmp	.+6      	; 0x382 <timer_init+0x2c2>
						
						default:
						TIMER_0_CONTROL_REG |= (1<<WGM01)|(1<<COM01);  break;
 37c:	83 b7       	in	r24, 0x33	; 51
 37e:	88 62       	ori	r24, 0x28	; 40
 380:	83 bf       	out	0x33, r24	; 51
					}
					TIMER_0_STATUS = INIT;
 382:	81 e0       	ldi	r24, 0x01	; 1
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 38a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					return DONE ;
 38e:	08 95       	ret
					break;
					
					case  SET_OC_MODE :
					switch(clock_select)
 390:	28 30       	cpi	r18, 0x08	; 8
 392:	31 05       	cpc	r19, r1
 394:	d9 f0       	breq	.+54     	; 0x3cc <timer_init+0x30c>
 396:	54 f4       	brge	.+20     	; 0x3ac <timer_init+0x2ec>
 398:	22 30       	cpi	r18, 0x02	; 2
 39a:	31 05       	cpc	r19, r1
 39c:	39 f1       	breq	.+78     	; 0x3ec <timer_init+0x32c>
 39e:	23 30       	cpi	r18, 0x03	; 3
 3a0:	31 05       	cpc	r19, r1
 3a2:	41 f1       	breq	.+80     	; 0x3f4 <timer_init+0x334>
 3a4:	21 30       	cpi	r18, 0x01	; 1
 3a6:	31 05       	cpc	r19, r1
 3a8:	49 f5       	brne	.+82     	; 0x3fc <timer_init+0x33c>
 3aa:	0c c0       	rjmp	.+24     	; 0x3c4 <timer_init+0x304>
 3ac:	29 30       	cpi	r18, 0x09	; 9
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	38 07       	cpc	r19, r24
 3b2:	a1 f0       	breq	.+40     	; 0x3dc <timer_init+0x31c>
 3b4:	21 15       	cp	r18, r1
 3b6:	84 e0       	ldi	r24, 0x04	; 4
 3b8:	38 07       	cpc	r19, r24
 3ba:	a1 f0       	breq	.+40     	; 0x3e4 <timer_init+0x324>
 3bc:	20 34       	cpi	r18, 0x40	; 64
 3be:	31 05       	cpc	r19, r1
 3c0:	e9 f4       	brne	.+58     	; 0x3fc <timer_init+0x33c>
 3c2:	08 c0       	rjmp	.+16     	; 0x3d4 <timer_init+0x314>
					{
						case NO_PRESCALING_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM00)|(1<<COM01)|(1<<CS00);
 3c4:	83 b7       	in	r24, 0x33	; 51
 3c6:	89 63       	ori	r24, 0x39	; 57
 3c8:	83 bf       	out	0x33, r24	; 51
						break;
 3ca:	1b c0       	rjmp	.+54     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
						
						case CLK_8_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM00)|(1<<COM01)|(1<<CS01);
 3cc:	83 b7       	in	r24, 0x33	; 51
 3ce:	8a 63       	ori	r24, 0x3A	; 58
 3d0:	83 bf       	out	0x33, r24	; 51
						break;
 3d2:	17 c0       	rjmp	.+46     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
						
						case CLK_64_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM00)|(1<<COM01)|(1<<CS00)|(1<<CS01);
 3d4:	83 b7       	in	r24, 0x33	; 51
 3d6:	8b 63       	ori	r24, 0x3B	; 59
 3d8:	83 bf       	out	0x33, r24	; 51
						break;
 3da:	13 c0       	rjmp	.+38     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
						
						case CLK_265_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM00)|(1<<COM01)|(1<<CS02);
 3dc:	83 b7       	in	r24, 0x33	; 51
 3de:	8c 63       	ori	r24, 0x3C	; 60
 3e0:	83 bf       	out	0x33, r24	; 51
						break;
 3e2:	0f c0       	rjmp	.+30     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
						
						case CLK_1024_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM00)|(1<<COM01)|(1<<CS00)|(1<<CS02);
 3e4:	83 b7       	in	r24, 0x33	; 51
 3e6:	8d 63       	ori	r24, 0x3D	; 61
 3e8:	83 bf       	out	0x33, r24	; 51
						break;
 3ea:	0b c0       	rjmp	.+22     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
						
						case FALLING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM00)|(1<<COM01)|(1<<CS01)|(1<<CS02);
 3ec:	83 b7       	in	r24, 0x33	; 51
 3ee:	8e 63       	ori	r24, 0x3E	; 62
 3f0:	83 bf       	out	0x33, r24	; 51
						break;
 3f2:	07 c0       	rjmp	.+14     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
						
						case RISING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<COM00)|(1<<COM01)|(1<<CS00)|(1<<CS01)|(1<<CS02);
 3f4:	83 b7       	in	r24, 0x33	; 51
 3f6:	8f 63       	ori	r24, 0x3F	; 63
 3f8:	83 bf       	out	0x33, r24	; 51
						break;
 3fa:	03 c0       	rjmp	.+6      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
						
						default:
						TIMER_0_CONTROL_REG |= (1<<WGM01)|(1<<COM00)|(1<<COM01); break;
 3fc:	83 b7       	in	r24, 0x33	; 51
 3fe:	88 63       	ori	r24, 0x38	; 56
 400:	83 bf       	out	0x33, r24	; 51
					}
					TIMER_0_STATUS = INIT;
 402:	81 e0       	ldi	r24, 0x01	; 1
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 40a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					return DONE ;
 40e:	08 95       	ret
					break;
					
					default:
					switch(clock_select)
 410:	28 30       	cpi	r18, 0x08	; 8
 412:	31 05       	cpc	r19, r1
 414:	d9 f0       	breq	.+54     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 416:	54 f4       	brge	.+20     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 418:	22 30       	cpi	r18, 0x02	; 2
 41a:	31 05       	cpc	r19, r1
 41c:	39 f1       	breq	.+78     	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 41e:	23 30       	cpi	r18, 0x03	; 3
 420:	31 05       	cpc	r19, r1
 422:	41 f1       	breq	.+80     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 424:	21 30       	cpi	r18, 0x01	; 1
 426:	31 05       	cpc	r19, r1
 428:	49 f5       	brne	.+82     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 42a:	0c c0       	rjmp	.+24     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 42c:	29 30       	cpi	r18, 0x09	; 9
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	38 07       	cpc	r19, r24
 432:	a1 f0       	breq	.+40     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 434:	21 15       	cp	r18, r1
 436:	84 e0       	ldi	r24, 0x04	; 4
 438:	38 07       	cpc	r19, r24
 43a:	a1 f0       	breq	.+40     	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 43c:	20 34       	cpi	r18, 0x40	; 64
 43e:	31 05       	cpc	r19, r1
 440:	e9 f4       	brne	.+58     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 442:	08 c0       	rjmp	.+16     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
					{
						case NO_PRESCALING_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<CS00);
 444:	83 b7       	in	r24, 0x33	; 51
 446:	89 60       	ori	r24, 0x09	; 9
 448:	83 bf       	out	0x33, r24	; 51
						break;
 44a:	1b c0       	rjmp	.+54     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
						
						case CLK_8_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<CS01);
 44c:	83 b7       	in	r24, 0x33	; 51
 44e:	8a 60       	ori	r24, 0x0A	; 10
 450:	83 bf       	out	0x33, r24	; 51
						break;
 452:	17 c0       	rjmp	.+46     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
						
						case CLK_64_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<CS00)|(1<<CS01);
 454:	83 b7       	in	r24, 0x33	; 51
 456:	8b 60       	ori	r24, 0x0B	; 11
 458:	83 bf       	out	0x33, r24	; 51
						break;
 45a:	13 c0       	rjmp	.+38     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
						
						case CLK_265_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<CS02);
 45c:	83 b7       	in	r24, 0x33	; 51
 45e:	8c 60       	ori	r24, 0x0C	; 12
 460:	83 bf       	out	0x33, r24	; 51
						break;
 462:	0f c0       	rjmp	.+30     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
						
						case CLK_1024_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<CS00)|(1<<CS02);
 464:	83 b7       	in	r24, 0x33	; 51
 466:	8d 60       	ori	r24, 0x0D	; 13
 468:	83 bf       	out	0x33, r24	; 51
						break;
 46a:	0b c0       	rjmp	.+22     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
						
						case FALLING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<CS01)|(1<<CS02);
 46c:	83 b7       	in	r24, 0x33	; 51
 46e:	8e 60       	ori	r24, 0x0E	; 14
 470:	83 bf       	out	0x33, r24	; 51
						break;
 472:	07 c0       	rjmp	.+14     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
						
						case RISING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM01)|(1<<CS00)|(1<<CS01)|(1<<CS02);
 474:	83 b7       	in	r24, 0x33	; 51
 476:	8f 60       	ori	r24, 0x0F	; 15
 478:	83 bf       	out	0x33, r24	; 51
						break;
 47a:	03 c0       	rjmp	.+6      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
						
						default:
						TIMER_0_CONTROL_REG |= (1<<WGM01);
 47c:	83 b7       	in	r24, 0x33	; 51
 47e:	88 60       	ori	r24, 0x08	; 8
 480:	83 bf       	out	0x33, r24	; 51
						break;
					}
					TIMER_0_STATUS = INIT;
 482:	81 e0       	ldi	r24, 0x01	; 1
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 48a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					return DONE ;
 48e:	08 95       	ret
					break;
				}
				break;
				
				case FAST_PWM_MODE :
				switch(com)
 490:	43 35       	cpi	r20, 0x53	; 83
 492:	09 f4       	brne	.+2      	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 494:	46 c0       	rjmp	.+140    	; 0x522 <__EEPROM_REGION_LENGTH__+0x122>
 496:	44 35       	cpi	r20, 0x54	; 84
 498:	09 f4       	brne	.+2      	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
 49a:	d1 c1       	rjmp	.+930    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 49c:	43 34       	cpi	r20, 0x43	; 67
 49e:	09 f0       	breq	.+2      	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 4a0:	80 c0       	rjmp	.+256    	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
					case TOGGLE_OC_MODE :
					return FAILED ;
					break;
					
					case CLEAR_OC_MODE :
					switch(clock_select)
 4a2:	28 30       	cpi	r18, 0x08	; 8
 4a4:	31 05       	cpc	r19, r1
 4a6:	d9 f0       	breq	.+54     	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
 4a8:	54 f4       	brge	.+20     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4aa:	22 30       	cpi	r18, 0x02	; 2
 4ac:	31 05       	cpc	r19, r1
 4ae:	39 f1       	breq	.+78     	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
 4b0:	23 30       	cpi	r18, 0x03	; 3
 4b2:	31 05       	cpc	r19, r1
 4b4:	41 f1       	breq	.+80     	; 0x506 <__EEPROM_REGION_LENGTH__+0x106>
 4b6:	21 30       	cpi	r18, 0x01	; 1
 4b8:	31 05       	cpc	r19, r1
 4ba:	49 f5       	brne	.+82     	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 4bc:	0c c0       	rjmp	.+24     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 4be:	29 30       	cpi	r18, 0x09	; 9
 4c0:	81 e0       	ldi	r24, 0x01	; 1
 4c2:	38 07       	cpc	r19, r24
 4c4:	a1 f0       	breq	.+40     	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
 4c6:	21 15       	cp	r18, r1
 4c8:	84 e0       	ldi	r24, 0x04	; 4
 4ca:	38 07       	cpc	r19, r24
 4cc:	a1 f0       	breq	.+40     	; 0x4f6 <__EEPROM_REGION_LENGTH__+0xf6>
 4ce:	20 34       	cpi	r18, 0x40	; 64
 4d0:	31 05       	cpc	r19, r1
 4d2:	e9 f4       	brne	.+58     	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 4d4:	08 c0       	rjmp	.+16     	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
					{
						case NO_PRESCALING_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<COM01)|(1<<CS00);
 4d6:	83 b7       	in	r24, 0x33	; 51
 4d8:	89 66       	ori	r24, 0x69	; 105
 4da:	83 bf       	out	0x33, r24	; 51
						break;
 4dc:	1b c0       	rjmp	.+54     	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
						
						case CLK_8_MODE :
						TIMER_0_CONTROL_REG |=ENABLE(WGM00) | ENABLE(WGM01) | ENABLE(COM01) | ENABLE(CS01);
 4de:	83 b7       	in	r24, 0x33	; 51
 4e0:	8a 66       	ori	r24, 0x6A	; 106
 4e2:	83 bf       	out	0x33, r24	; 51
						break;
 4e4:	17 c0       	rjmp	.+46     	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
						
						case CLK_64_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<COM01)|(1<<CS00)|(1<<CS01);
 4e6:	83 b7       	in	r24, 0x33	; 51
 4e8:	8b 66       	ori	r24, 0x6B	; 107
 4ea:	83 bf       	out	0x33, r24	; 51
						break;
 4ec:	13 c0       	rjmp	.+38     	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
						
						case CLK_265_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<COM01)|(1<<CS02);
 4ee:	83 b7       	in	r24, 0x33	; 51
 4f0:	8c 66       	ori	r24, 0x6C	; 108
 4f2:	83 bf       	out	0x33, r24	; 51
						break;
 4f4:	0f c0       	rjmp	.+30     	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
						
						case CLK_1024_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<COM01)|(1<<CS00)|(1<<CS02);
 4f6:	83 b7       	in	r24, 0x33	; 51
 4f8:	8d 66       	ori	r24, 0x6D	; 109
 4fa:	83 bf       	out	0x33, r24	; 51
						break;
 4fc:	0b c0       	rjmp	.+22     	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
						
						case FALLING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<COM01)|(1<<CS01)|(1<<CS02);
 4fe:	83 b7       	in	r24, 0x33	; 51
 500:	8e 66       	ori	r24, 0x6E	; 110
 502:	83 bf       	out	0x33, r24	; 51
						break;
 504:	07 c0       	rjmp	.+14     	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
						
						case RISING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<COM01)|(1<<CS00)|(1<<CS01)|(1<<CS02);
 506:	83 b7       	in	r24, 0x33	; 51
 508:	8f 66       	ori	r24, 0x6F	; 111
 50a:	83 bf       	out	0x33, r24	; 51
						break;
 50c:	03 c0       	rjmp	.+6      	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
						
						default:
						TIMER_0_CONTROL_REG |= (1<<WGM00) | (1<<WGM01)|(1<<COM01);
 50e:	83 b7       	in	r24, 0x33	; 51
 510:	88 66       	ori	r24, 0x68	; 104
 512:	83 bf       	out	0x33, r24	; 51
					}
					TIMER_0_STATUS = INIT;
 514:	81 e0       	ldi	r24, 0x01	; 1
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 51c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					return DONE ;
 520:	08 95       	ret
					break;
					
					case  SET_OC_MODE :
					switch(clock_select)
 522:	28 30       	cpi	r18, 0x08	; 8
 524:	31 05       	cpc	r19, r1
 526:	d9 f0       	breq	.+54     	; 0x55e <__EEPROM_REGION_LENGTH__+0x15e>
 528:	54 f4       	brge	.+20     	; 0x53e <__EEPROM_REGION_LENGTH__+0x13e>
 52a:	22 30       	cpi	r18, 0x02	; 2
 52c:	31 05       	cpc	r19, r1
 52e:	39 f1       	breq	.+78     	; 0x57e <__EEPROM_REGION_LENGTH__+0x17e>
 530:	23 30       	cpi	r18, 0x03	; 3
 532:	31 05       	cpc	r19, r1
 534:	41 f1       	breq	.+80     	; 0x586 <__EEPROM_REGION_LENGTH__+0x186>
 536:	21 30       	cpi	r18, 0x01	; 1
 538:	31 05       	cpc	r19, r1
 53a:	49 f5       	brne	.+82     	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 53c:	0c c0       	rjmp	.+24     	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
 53e:	29 30       	cpi	r18, 0x09	; 9
 540:	81 e0       	ldi	r24, 0x01	; 1
 542:	38 07       	cpc	r19, r24
 544:	a1 f0       	breq	.+40     	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
 546:	21 15       	cp	r18, r1
 548:	84 e0       	ldi	r24, 0x04	; 4
 54a:	38 07       	cpc	r19, r24
 54c:	a1 f0       	breq	.+40     	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
 54e:	20 34       	cpi	r18, 0x40	; 64
 550:	31 05       	cpc	r19, r1
 552:	e9 f4       	brne	.+58     	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 554:	08 c0       	rjmp	.+16     	; 0x566 <__EEPROM_REGION_LENGTH__+0x166>
					{
						case NO_PRESCALING_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<COM00)|(1<<COM01)|(1<<CS00);
 556:	83 b7       	in	r24, 0x33	; 51
 558:	89 67       	ori	r24, 0x79	; 121
 55a:	83 bf       	out	0x33, r24	; 51
						break;
 55c:	1b c0       	rjmp	.+54     	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
						
						case CLK_8_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<COM00)|(1<<COM01)|(1<<CS01);
 55e:	83 b7       	in	r24, 0x33	; 51
 560:	8a 67       	ori	r24, 0x7A	; 122
 562:	83 bf       	out	0x33, r24	; 51
						break;
 564:	17 c0       	rjmp	.+46     	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
						
						case CLK_64_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<COM00)|(1<<COM01)|(1<<CS00)|(1<<CS01);
 566:	83 b7       	in	r24, 0x33	; 51
 568:	8b 67       	ori	r24, 0x7B	; 123
 56a:	83 bf       	out	0x33, r24	; 51
						break;
 56c:	13 c0       	rjmp	.+38     	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
						
						case CLK_265_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<COM00)|(1<<COM01)|(1<<CS02);
 56e:	83 b7       	in	r24, 0x33	; 51
 570:	8c 67       	ori	r24, 0x7C	; 124
 572:	83 bf       	out	0x33, r24	; 51
						break;
 574:	0f c0       	rjmp	.+30     	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
						
						case CLK_1024_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<COM00)|(1<<COM01)|(1<<CS00)|(1<<CS02);
 576:	83 b7       	in	r24, 0x33	; 51
 578:	8d 67       	ori	r24, 0x7D	; 125
 57a:	83 bf       	out	0x33, r24	; 51
						break;
 57c:	0b c0       	rjmp	.+22     	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
						
						case FALLING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<COM00)|(1<<COM01)|(1<<CS01)|(1<<CS02);
 57e:	83 b7       	in	r24, 0x33	; 51
 580:	8e 67       	ori	r24, 0x7E	; 126
 582:	83 bf       	out	0x33, r24	; 51
						break;
 584:	07 c0       	rjmp	.+14     	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
						
						case RISING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<COM00)|(1<<COM01)|(1<<CS00)|(1<<CS01)|(1<<CS02);
 586:	83 b7       	in	r24, 0x33	; 51
 588:	8f 67       	ori	r24, 0x7F	; 127
 58a:	83 bf       	out	0x33, r24	; 51
						break;
 58c:	03 c0       	rjmp	.+6      	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
						
						default:
						TIMER_0_CONTROL_REG |= (1<<WGM00) | (1<<WGM01) | (1<<COM00)|(1<<COM01);
 58e:	83 b7       	in	r24, 0x33	; 51
 590:	88 67       	ori	r24, 0x78	; 120
 592:	83 bf       	out	0x33, r24	; 51
					}
					TIMER_0_STATUS = INIT;
 594:	81 e0       	ldi	r24, 0x01	; 1
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 59c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					return DONE ;
 5a0:	08 95       	ret
					break;
					
					default:
					switch(clock_select)
 5a2:	28 30       	cpi	r18, 0x08	; 8
 5a4:	31 05       	cpc	r19, r1
 5a6:	d9 f0       	breq	.+54     	; 0x5de <__EEPROM_REGION_LENGTH__+0x1de>
 5a8:	54 f4       	brge	.+20     	; 0x5be <__EEPROM_REGION_LENGTH__+0x1be>
 5aa:	22 30       	cpi	r18, 0x02	; 2
 5ac:	31 05       	cpc	r19, r1
 5ae:	39 f1       	breq	.+78     	; 0x5fe <__EEPROM_REGION_LENGTH__+0x1fe>
 5b0:	23 30       	cpi	r18, 0x03	; 3
 5b2:	31 05       	cpc	r19, r1
 5b4:	41 f1       	breq	.+80     	; 0x606 <__EEPROM_REGION_LENGTH__+0x206>
 5b6:	21 30       	cpi	r18, 0x01	; 1
 5b8:	31 05       	cpc	r19, r1
 5ba:	49 f5       	brne	.+82     	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 5bc:	0c c0       	rjmp	.+24     	; 0x5d6 <__EEPROM_REGION_LENGTH__+0x1d6>
 5be:	29 30       	cpi	r18, 0x09	; 9
 5c0:	81 e0       	ldi	r24, 0x01	; 1
 5c2:	38 07       	cpc	r19, r24
 5c4:	a1 f0       	breq	.+40     	; 0x5ee <__EEPROM_REGION_LENGTH__+0x1ee>
 5c6:	21 15       	cp	r18, r1
 5c8:	84 e0       	ldi	r24, 0x04	; 4
 5ca:	38 07       	cpc	r19, r24
 5cc:	a1 f0       	breq	.+40     	; 0x5f6 <__EEPROM_REGION_LENGTH__+0x1f6>
 5ce:	20 34       	cpi	r18, 0x40	; 64
 5d0:	31 05       	cpc	r19, r1
 5d2:	e9 f4       	brne	.+58     	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 5d4:	08 c0       	rjmp	.+16     	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
					{
						case NO_PRESCALING_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<CS00);
 5d6:	83 b7       	in	r24, 0x33	; 51
 5d8:	89 64       	ori	r24, 0x49	; 73
 5da:	83 bf       	out	0x33, r24	; 51
						break;
 5dc:	1b c0       	rjmp	.+54     	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
						
						case CLK_8_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<CS01);
 5de:	83 b7       	in	r24, 0x33	; 51
 5e0:	8a 64       	ori	r24, 0x4A	; 74
 5e2:	83 bf       	out	0x33, r24	; 51
						break;
 5e4:	17 c0       	rjmp	.+46     	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
						
						case CLK_64_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<CS00)|(1<<CS01);
 5e6:	83 b7       	in	r24, 0x33	; 51
 5e8:	8b 64       	ori	r24, 0x4B	; 75
 5ea:	83 bf       	out	0x33, r24	; 51
						break;
 5ec:	13 c0       	rjmp	.+38     	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
						
						case CLK_265_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<CS02);
 5ee:	83 b7       	in	r24, 0x33	; 51
 5f0:	8c 64       	ori	r24, 0x4C	; 76
 5f2:	83 bf       	out	0x33, r24	; 51
						break;
 5f4:	0f c0       	rjmp	.+30     	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
						
						case CLK_1024_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<CS00)|(1<<CS02);
 5f6:	83 b7       	in	r24, 0x33	; 51
 5f8:	8d 64       	ori	r24, 0x4D	; 77
 5fa:	83 bf       	out	0x33, r24	; 51
						break;
 5fc:	0b c0       	rjmp	.+22     	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
						
						case FALLING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<CS01)|(1<<CS02);
 5fe:	83 b7       	in	r24, 0x33	; 51
 600:	8e 64       	ori	r24, 0x4E	; 78
 602:	83 bf       	out	0x33, r24	; 51
						break;
 604:	07 c0       	rjmp	.+14     	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
						
						case RISING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<WGM00) | (1<<WGM01)|(1<<CS00)|(1<<CS01)|(1<<CS02);
 606:	83 b7       	in	r24, 0x33	; 51
 608:	8f 64       	ori	r24, 0x4F	; 79
 60a:	83 bf       	out	0x33, r24	; 51
						break;
 60c:	03 c0       	rjmp	.+6      	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
						
						default:
						TIMER_0_CONTROL_REG |= (1<<WGM00) | (1<<WGM01) ;
 60e:	83 b7       	in	r24, 0x33	; 51
 610:	88 64       	ori	r24, 0x48	; 72
 612:	83 bf       	out	0x33, r24	; 51
						break;
					}
					TIMER_0_STATUS = INIT;
 614:	81 e0       	ldi	r24, 0x01	; 1
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 61c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					return DONE ;
 620:	08 95       	ret
					break;
				}
				break;
				
				default:
				switch(com)
 622:	43 35       	cpi	r20, 0x53	; 83
 624:	09 f4       	brne	.+2      	; 0x628 <__EEPROM_REGION_LENGTH__+0x228>
 626:	86 c0       	rjmp	.+268    	; 0x734 <__EEPROM_REGION_LENGTH__+0x334>
 628:	44 35       	cpi	r20, 0x54	; 84
 62a:	21 f0       	breq	.+8      	; 0x634 <__EEPROM_REGION_LENGTH__+0x234>
 62c:	43 34       	cpi	r20, 0x43	; 67
 62e:	09 f0       	breq	.+2      	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
 630:	c1 c0       	rjmp	.+386    	; 0x7b4 <__EEPROM_REGION_LENGTH__+0x3b4>
 632:	40 c0       	rjmp	.+128    	; 0x6b4 <__EEPROM_REGION_LENGTH__+0x2b4>
				{
					case TOGGLE_OC_MODE :
					switch(clock_select)
 634:	28 30       	cpi	r18, 0x08	; 8
 636:	31 05       	cpc	r19, r1
 638:	d9 f0       	breq	.+54     	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
 63a:	54 f4       	brge	.+20     	; 0x650 <__EEPROM_REGION_LENGTH__+0x250>
 63c:	22 30       	cpi	r18, 0x02	; 2
 63e:	31 05       	cpc	r19, r1
 640:	39 f1       	breq	.+78     	; 0x690 <__EEPROM_REGION_LENGTH__+0x290>
 642:	23 30       	cpi	r18, 0x03	; 3
 644:	31 05       	cpc	r19, r1
 646:	41 f1       	breq	.+80     	; 0x698 <__EEPROM_REGION_LENGTH__+0x298>
 648:	21 30       	cpi	r18, 0x01	; 1
 64a:	31 05       	cpc	r19, r1
 64c:	49 f5       	brne	.+82     	; 0x6a0 <__EEPROM_REGION_LENGTH__+0x2a0>
 64e:	0c c0       	rjmp	.+24     	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
 650:	29 30       	cpi	r18, 0x09	; 9
 652:	81 e0       	ldi	r24, 0x01	; 1
 654:	38 07       	cpc	r19, r24
 656:	a1 f0       	breq	.+40     	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
 658:	21 15       	cp	r18, r1
 65a:	84 e0       	ldi	r24, 0x04	; 4
 65c:	38 07       	cpc	r19, r24
 65e:	a1 f0       	breq	.+40     	; 0x688 <__EEPROM_REGION_LENGTH__+0x288>
 660:	20 34       	cpi	r18, 0x40	; 64
 662:	31 05       	cpc	r19, r1
 664:	e9 f4       	brne	.+58     	; 0x6a0 <__EEPROM_REGION_LENGTH__+0x2a0>
 666:	08 c0       	rjmp	.+16     	; 0x678 <__EEPROM_REGION_LENGTH__+0x278>
					{
						case NO_PRESCALING_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM00)|(1<<CS00);
 668:	83 b7       	in	r24, 0x33	; 51
 66a:	81 61       	ori	r24, 0x11	; 17
 66c:	83 bf       	out	0x33, r24	; 51
						break;
 66e:	1b c0       	rjmp	.+54     	; 0x6a6 <__EEPROM_REGION_LENGTH__+0x2a6>
						
						case CLK_8_MODE : 
						TIMER_0_CONTROL_REG |=(1<<COM00)|(1<<CS01);
 670:	83 b7       	in	r24, 0x33	; 51
 672:	82 61       	ori	r24, 0x12	; 18
 674:	83 bf       	out	0x33, r24	; 51
						break;
 676:	17 c0       	rjmp	.+46     	; 0x6a6 <__EEPROM_REGION_LENGTH__+0x2a6>
						
						case CLK_64_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM00)|(1<<CS00)|(1<<CS01);
 678:	83 b7       	in	r24, 0x33	; 51
 67a:	83 61       	ori	r24, 0x13	; 19
 67c:	83 bf       	out	0x33, r24	; 51
						break;
 67e:	13 c0       	rjmp	.+38     	; 0x6a6 <__EEPROM_REGION_LENGTH__+0x2a6>
						
						case CLK_265_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM00)|(1<<CS02);
 680:	83 b7       	in	r24, 0x33	; 51
 682:	84 61       	ori	r24, 0x14	; 20
 684:	83 bf       	out	0x33, r24	; 51
						break;
 686:	0f c0       	rjmp	.+30     	; 0x6a6 <__EEPROM_REGION_LENGTH__+0x2a6>
						
						case CLK_1024_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM00)|(1<<CS00)|(1<<CS02);
 688:	83 b7       	in	r24, 0x33	; 51
 68a:	85 61       	ori	r24, 0x15	; 21
 68c:	83 bf       	out	0x33, r24	; 51
						break;
 68e:	0b c0       	rjmp	.+22     	; 0x6a6 <__EEPROM_REGION_LENGTH__+0x2a6>
						
						case FALLING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM00)|(1<<CS01)|(1<<CS02);
 690:	83 b7       	in	r24, 0x33	; 51
 692:	86 61       	ori	r24, 0x16	; 22
 694:	83 bf       	out	0x33, r24	; 51
						break;
 696:	07 c0       	rjmp	.+14     	; 0x6a6 <__EEPROM_REGION_LENGTH__+0x2a6>
						
						case RISING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM00)|(1<<CS00)|(1<<CS01)|(1<<CS02);
 698:	83 b7       	in	r24, 0x33	; 51
 69a:	87 61       	ori	r24, 0x17	; 23
 69c:	83 bf       	out	0x33, r24	; 51
						break;
 69e:	03 c0       	rjmp	.+6      	; 0x6a6 <__EEPROM_REGION_LENGTH__+0x2a6>
						
						default:
						TIMER_0_CONTROL_REG |= (1<<COM00);
 6a0:	83 b7       	in	r24, 0x33	; 51
 6a2:	80 61       	ori	r24, 0x10	; 16
 6a4:	83 bf       	out	0x33, r24	; 51
					}
					TIMER_0_STATUS = INIT;
 6a6:	81 e0       	ldi	r24, 0x01	; 1
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 6ae:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					return DONE ;
 6b2:	08 95       	ret
					break;
					
					case CLEAR_OC_MODE :
					switch(clock_select)
 6b4:	28 30       	cpi	r18, 0x08	; 8
 6b6:	31 05       	cpc	r19, r1
 6b8:	d9 f0       	breq	.+54     	; 0x6f0 <__EEPROM_REGION_LENGTH__+0x2f0>
 6ba:	54 f4       	brge	.+20     	; 0x6d0 <__EEPROM_REGION_LENGTH__+0x2d0>
 6bc:	22 30       	cpi	r18, 0x02	; 2
 6be:	31 05       	cpc	r19, r1
 6c0:	39 f1       	breq	.+78     	; 0x710 <__EEPROM_REGION_LENGTH__+0x310>
 6c2:	23 30       	cpi	r18, 0x03	; 3
 6c4:	31 05       	cpc	r19, r1
 6c6:	41 f1       	breq	.+80     	; 0x718 <__EEPROM_REGION_LENGTH__+0x318>
 6c8:	21 30       	cpi	r18, 0x01	; 1
 6ca:	31 05       	cpc	r19, r1
 6cc:	49 f5       	brne	.+82     	; 0x720 <__EEPROM_REGION_LENGTH__+0x320>
 6ce:	0c c0       	rjmp	.+24     	; 0x6e8 <__EEPROM_REGION_LENGTH__+0x2e8>
 6d0:	29 30       	cpi	r18, 0x09	; 9
 6d2:	81 e0       	ldi	r24, 0x01	; 1
 6d4:	38 07       	cpc	r19, r24
 6d6:	a1 f0       	breq	.+40     	; 0x700 <__EEPROM_REGION_LENGTH__+0x300>
 6d8:	21 15       	cp	r18, r1
 6da:	84 e0       	ldi	r24, 0x04	; 4
 6dc:	38 07       	cpc	r19, r24
 6de:	a1 f0       	breq	.+40     	; 0x708 <__EEPROM_REGION_LENGTH__+0x308>
 6e0:	20 34       	cpi	r18, 0x40	; 64
 6e2:	31 05       	cpc	r19, r1
 6e4:	e9 f4       	brne	.+58     	; 0x720 <__EEPROM_REGION_LENGTH__+0x320>
 6e6:	08 c0       	rjmp	.+16     	; 0x6f8 <__EEPROM_REGION_LENGTH__+0x2f8>
					{
						case NO_PRESCALING_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM01)|(1<<CS00);
 6e8:	83 b7       	in	r24, 0x33	; 51
 6ea:	81 62       	ori	r24, 0x21	; 33
 6ec:	83 bf       	out	0x33, r24	; 51
						break;
 6ee:	1b c0       	rjmp	.+54     	; 0x726 <__EEPROM_REGION_LENGTH__+0x326>
						
						case CLK_8_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM01)|(1<<CS01);
 6f0:	83 b7       	in	r24, 0x33	; 51
 6f2:	82 62       	ori	r24, 0x22	; 34
 6f4:	83 bf       	out	0x33, r24	; 51
						break;
 6f6:	17 c0       	rjmp	.+46     	; 0x726 <__EEPROM_REGION_LENGTH__+0x326>
						
						case CLK_64_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM01)|(1<<CS00)|(1<<CS01);
 6f8:	83 b7       	in	r24, 0x33	; 51
 6fa:	83 62       	ori	r24, 0x23	; 35
 6fc:	83 bf       	out	0x33, r24	; 51
						break;
 6fe:	13 c0       	rjmp	.+38     	; 0x726 <__EEPROM_REGION_LENGTH__+0x326>
						
						case CLK_265_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM01)|(1<<CS02);
 700:	83 b7       	in	r24, 0x33	; 51
 702:	84 62       	ori	r24, 0x24	; 36
 704:	83 bf       	out	0x33, r24	; 51
						break;
 706:	0f c0       	rjmp	.+30     	; 0x726 <__EEPROM_REGION_LENGTH__+0x326>
						
						case CLK_1024_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM01)|(1<<CS00)|(1<<CS02);
 708:	83 b7       	in	r24, 0x33	; 51
 70a:	85 62       	ori	r24, 0x25	; 37
 70c:	83 bf       	out	0x33, r24	; 51
						break;
 70e:	0b c0       	rjmp	.+22     	; 0x726 <__EEPROM_REGION_LENGTH__+0x326>
						
						case FALLING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM01)|(1<<CS01)|(1<<CS02);
 710:	83 b7       	in	r24, 0x33	; 51
 712:	86 62       	ori	r24, 0x26	; 38
 714:	83 bf       	out	0x33, r24	; 51
						break;
 716:	07 c0       	rjmp	.+14     	; 0x726 <__EEPROM_REGION_LENGTH__+0x326>
						
						case RISING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM01)|(1<<CS00)|(1<<CS01)|(1<<CS02);
 718:	83 b7       	in	r24, 0x33	; 51
 71a:	87 62       	ori	r24, 0x27	; 39
 71c:	83 bf       	out	0x33, r24	; 51
						break;
 71e:	03 c0       	rjmp	.+6      	; 0x726 <__EEPROM_REGION_LENGTH__+0x326>
						
						default:
						TIMER_0_CONTROL_REG |= (1<<COM01);
 720:	83 b7       	in	r24, 0x33	; 51
 722:	80 62       	ori	r24, 0x20	; 32
 724:	83 bf       	out	0x33, r24	; 51
					}
					TIMER_0_STATUS = INIT;
 726:	81 e0       	ldi	r24, 0x01	; 1
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 72e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					return DONE ;
 732:	08 95       	ret
					break;
					
					case  SET_OC_MODE :
					switch(clock_select)
 734:	28 30       	cpi	r18, 0x08	; 8
 736:	31 05       	cpc	r19, r1
 738:	d9 f0       	breq	.+54     	; 0x770 <__EEPROM_REGION_LENGTH__+0x370>
 73a:	54 f4       	brge	.+20     	; 0x750 <__EEPROM_REGION_LENGTH__+0x350>
 73c:	22 30       	cpi	r18, 0x02	; 2
 73e:	31 05       	cpc	r19, r1
 740:	39 f1       	breq	.+78     	; 0x790 <__EEPROM_REGION_LENGTH__+0x390>
 742:	23 30       	cpi	r18, 0x03	; 3
 744:	31 05       	cpc	r19, r1
 746:	41 f1       	breq	.+80     	; 0x798 <__EEPROM_REGION_LENGTH__+0x398>
 748:	21 30       	cpi	r18, 0x01	; 1
 74a:	31 05       	cpc	r19, r1
 74c:	49 f5       	brne	.+82     	; 0x7a0 <__EEPROM_REGION_LENGTH__+0x3a0>
 74e:	0c c0       	rjmp	.+24     	; 0x768 <__EEPROM_REGION_LENGTH__+0x368>
 750:	29 30       	cpi	r18, 0x09	; 9
 752:	81 e0       	ldi	r24, 0x01	; 1
 754:	38 07       	cpc	r19, r24
 756:	a1 f0       	breq	.+40     	; 0x780 <__EEPROM_REGION_LENGTH__+0x380>
 758:	21 15       	cp	r18, r1
 75a:	84 e0       	ldi	r24, 0x04	; 4
 75c:	38 07       	cpc	r19, r24
 75e:	a1 f0       	breq	.+40     	; 0x788 <__EEPROM_REGION_LENGTH__+0x388>
 760:	20 34       	cpi	r18, 0x40	; 64
 762:	31 05       	cpc	r19, r1
 764:	e9 f4       	brne	.+58     	; 0x7a0 <__EEPROM_REGION_LENGTH__+0x3a0>
 766:	08 c0       	rjmp	.+16     	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
					{
						case NO_PRESCALING_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM00)|(1<<COM01)|(1<<CS00);
 768:	83 b7       	in	r24, 0x33	; 51
 76a:	81 63       	ori	r24, 0x31	; 49
 76c:	83 bf       	out	0x33, r24	; 51
						break;
 76e:	1b c0       	rjmp	.+54     	; 0x7a6 <__EEPROM_REGION_LENGTH__+0x3a6>
						
						case CLK_8_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM00)|(1<<COM01)|(1<<CS01);
 770:	83 b7       	in	r24, 0x33	; 51
 772:	82 63       	ori	r24, 0x32	; 50
 774:	83 bf       	out	0x33, r24	; 51
						break;
 776:	17 c0       	rjmp	.+46     	; 0x7a6 <__EEPROM_REGION_LENGTH__+0x3a6>
						
						case CLK_64_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM00)|(1<<COM01)|(1<<CS00)|(1<<CS01);
 778:	83 b7       	in	r24, 0x33	; 51
 77a:	83 63       	ori	r24, 0x33	; 51
 77c:	83 bf       	out	0x33, r24	; 51
						break;
 77e:	13 c0       	rjmp	.+38     	; 0x7a6 <__EEPROM_REGION_LENGTH__+0x3a6>
						
						case CLK_265_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM00)|(1<<COM01)|(1<<CS02);
 780:	83 b7       	in	r24, 0x33	; 51
 782:	84 63       	ori	r24, 0x34	; 52
 784:	83 bf       	out	0x33, r24	; 51
						break;
 786:	0f c0       	rjmp	.+30     	; 0x7a6 <__EEPROM_REGION_LENGTH__+0x3a6>
						
						case CLK_1024_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM00)|(1<<COM01)|(1<<CS00)|(1<<CS02);
 788:	83 b7       	in	r24, 0x33	; 51
 78a:	85 63       	ori	r24, 0x35	; 53
 78c:	83 bf       	out	0x33, r24	; 51
						break;
 78e:	0b c0       	rjmp	.+22     	; 0x7a6 <__EEPROM_REGION_LENGTH__+0x3a6>
						
						case FALLING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM00)|(1<<COM01)|(1<<CS01)|(1<<CS02);
 790:	83 b7       	in	r24, 0x33	; 51
 792:	86 63       	ori	r24, 0x36	; 54
 794:	83 bf       	out	0x33, r24	; 51
						break;
 796:	07 c0       	rjmp	.+14     	; 0x7a6 <__EEPROM_REGION_LENGTH__+0x3a6>
						
						case RISING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<COM00)|(1<<COM01)|(1<<CS00)|(1<<CS01)|(1<<CS02);
 798:	83 b7       	in	r24, 0x33	; 51
 79a:	87 63       	ori	r24, 0x37	; 55
 79c:	83 bf       	out	0x33, r24	; 51
						break;
 79e:	03 c0       	rjmp	.+6      	; 0x7a6 <__EEPROM_REGION_LENGTH__+0x3a6>
						
						default:
						TIMER_0_CONTROL_REG |= (1<<COM00)|(1<<COM01);
 7a0:	83 b7       	in	r24, 0x33	; 51
 7a2:	80 63       	ori	r24, 0x30	; 48
 7a4:	83 bf       	out	0x33, r24	; 51
					}
					TIMER_0_STATUS = INIT;
 7a6:	81 e0       	ldi	r24, 0x01	; 1
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 7ae:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					return DONE ;
 7b2:	08 95       	ret
					break;
					
					default:
					switch(clock_select)
 7b4:	28 30       	cpi	r18, 0x08	; 8
 7b6:	31 05       	cpc	r19, r1
 7b8:	d9 f0       	breq	.+54     	; 0x7f0 <__EEPROM_REGION_LENGTH__+0x3f0>
 7ba:	54 f4       	brge	.+20     	; 0x7d0 <__EEPROM_REGION_LENGTH__+0x3d0>
 7bc:	22 30       	cpi	r18, 0x02	; 2
 7be:	31 05       	cpc	r19, r1
 7c0:	39 f1       	breq	.+78     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 7c2:	23 30       	cpi	r18, 0x03	; 3
 7c4:	31 05       	cpc	r19, r1
 7c6:	41 f1       	breq	.+80     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 7c8:	21 30       	cpi	r18, 0x01	; 1
 7ca:	31 05       	cpc	r19, r1
 7cc:	d9 f5       	brne	.+118    	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 7ce:	0c c0       	rjmp	.+24     	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
 7d0:	29 30       	cpi	r18, 0x09	; 9
 7d2:	81 e0       	ldi	r24, 0x01	; 1
 7d4:	38 07       	cpc	r19, r24
 7d6:	a1 f0       	breq	.+40     	; 0x800 <__DATA_REGION_LENGTH__>
 7d8:	21 15       	cp	r18, r1
 7da:	84 e0       	ldi	r24, 0x04	; 4
 7dc:	38 07       	cpc	r19, r24
 7de:	a1 f0       	breq	.+40     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 7e0:	20 34       	cpi	r18, 0x40	; 64
 7e2:	31 05       	cpc	r19, r1
 7e4:	79 f5       	brne	.+94     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 7e6:	08 c0       	rjmp	.+16     	; 0x7f8 <__EEPROM_REGION_LENGTH__+0x3f8>
					{
						case NO_PRESCALING_MODE :
						TIMER_0_CONTROL_REG |=(1<<CS00);
 7e8:	83 b7       	in	r24, 0x33	; 51
 7ea:	81 60       	ori	r24, 0x01	; 1
 7ec:	83 bf       	out	0x33, r24	; 51
						break;
 7ee:	17 c0       	rjmp	.+46     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
						
						case CLK_8_MODE :
						TIMER_0_CONTROL_REG |=(1<<CS01);
 7f0:	83 b7       	in	r24, 0x33	; 51
 7f2:	82 60       	ori	r24, 0x02	; 2
 7f4:	83 bf       	out	0x33, r24	; 51
						break;
 7f6:	13 c0       	rjmp	.+38     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
						
						case CLK_64_MODE :
						TIMER_0_CONTROL_REG |=(1<<CS00)|(1<<CS01);
 7f8:	83 b7       	in	r24, 0x33	; 51
 7fa:	83 60       	ori	r24, 0x03	; 3
 7fc:	83 bf       	out	0x33, r24	; 51
						break;
 7fe:	0f c0       	rjmp	.+30     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
						
						case CLK_265_MODE :
						TIMER_0_CONTROL_REG |=(1<<CS02);
 800:	83 b7       	in	r24, 0x33	; 51
 802:	84 60       	ori	r24, 0x04	; 4
 804:	83 bf       	out	0x33, r24	; 51
						break;
 806:	0b c0       	rjmp	.+22     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
						
						case CLK_1024_MODE :
						TIMER_0_CONTROL_REG |=(1<<CS00)|(1<<CS02);
 808:	83 b7       	in	r24, 0x33	; 51
 80a:	85 60       	ori	r24, 0x05	; 5
 80c:	83 bf       	out	0x33, r24	; 51
						break;
 80e:	07 c0       	rjmp	.+14     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
						
						case FALLING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<CS01)|(1<<CS02);
 810:	83 b7       	in	r24, 0x33	; 51
 812:	86 60       	ori	r24, 0x06	; 6
 814:	83 bf       	out	0x33, r24	; 51
						break;
 816:	03 c0       	rjmp	.+6      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
						
						case RISING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<CS00)|(1<<CS01)|(1<<CS02);
 818:	83 b7       	in	r24, 0x33	; 51
 81a:	87 60       	ori	r24, 0x07	; 7
 81c:	83 bf       	out	0x33, r24	; 51
						
						default:
						return FAILED;
						break;
					}
					TIMER_0_STATUS = INIT;
 81e:	81 e0       	ldi	r24, 0x01	; 1
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 826:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					return DONE ;
 82a:	08 95       	ret
				break;
			}
		}
	}
	else {
		return FAILED_INIT_BEFORE ;
 82c:	82 e0       	ldi	r24, 0x02	; 2
 82e:	90 e0       	ldi	r25, 0x00	; 0
 830:	08 95       	ret
	}
	return DONE ;
 832:	81 e0       	ldi	r24, 0x01	; 1
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	08 95       	ret
			{
				case PWM_PHASE_CORRECT_MODE :
				switch(com)
				{
					case TOGGLE_OC_MODE :
					return FAILED ;
 838:	80 e0       	ldi	r24, 0x00	; 0
 83a:	90 e0       	ldi	r25, 0x00	; 0
 83c:	08 95       	ret
				
				case FAST_PWM_MODE :
				switch(com)
				{
					case TOGGLE_OC_MODE :
					return FAILED ;
 83e:	80 e0       	ldi	r24, 0x00	; 0
 840:	90 e0       	ldi	r25, 0x00	; 0
 842:	08 95       	ret
						case RISING_EDGE_MODE :
						TIMER_0_CONTROL_REG |=(1<<CS00)|(1<<CS01)|(1<<CS02);
						break;
						
						default:
						return FAILED;
 844:	80 e0       	ldi	r24, 0x00	; 0
 846:	90 e0       	ldi	r25, 0x00	; 0
	}
	else {
		return FAILED_INIT_BEFORE ;
	}
	return DONE ;
 848:	08 95       	ret

0000084a <_exit>:
 84a:	f8 94       	cli

0000084c <__stop_program>:
 84c:	ff cf       	rjmp	.-2      	; 0x84c <__stop_program>
